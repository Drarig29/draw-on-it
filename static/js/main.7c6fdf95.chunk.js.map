{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","props","undo","canvas","current","clear","save","alert","state","imgSrc","canvasWidth","canvasHeight","createRef","img","Image","src","URL","document","location","href","searchParams","get","onload","width","window","innerWidth","height","setState","console","log","setTimeout","drawImage","className","Button","onClick","this","ref","brushColor","brushRadius","lazyRadius","hideInterface","hideGrid","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"sSAmDeA,E,kDA5CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAiBVC,KAAO,WACH,EAAKC,OAAOC,QAAQF,QAnBL,EAsBnBG,MAAQ,WACJ,EAAKF,OAAOC,QAAQC,SAvBL,EA0BnBC,KAAO,WACHC,MAAM,oCAzBN,EAAKC,MAAQ,CAAEC,OAAQ,GAAIC,YAAa,QAASC,aAAc,SAC/D,EAAKR,OAASS,sBAHC,E,gEAME,IAAD,OACZC,EAAM,IAAIC,MACdD,EAAIE,IAAM,IAAIC,IAAIC,SAASC,SAASC,MAAMC,aAAaC,IAAI,SAC3DR,EAAIS,OAAS,WACT,IAAIC,EAA4B,GAApBC,OAAOC,WACfC,EAAUb,EAAIa,OAASb,EAAIU,MAASA,EACxC,EAAKI,SAAS,CAAElB,OAAQI,EAAIE,IAAKL,YAAY,GAAD,OAAKa,EAAL,MAAgBZ,aAAa,GAAD,OAAKe,EAAL,QACxEE,QAAQC,IAAI,gBAAiBN,EAAOG,GACpCI,YAAW,kBAAM,EAAK3B,OAAOC,QAAQ2B,cAAa,Q,+BAiBtD,OACI,yBAAKC,UAAU,OACX,kBAACC,EAAA,EAAD,CAAQC,QAASC,KAAKjC,MAAtB,WACA,kBAAC+B,EAAA,EAAD,CAAQC,QAASC,KAAK9B,OAAtB,WACA,kBAAC4B,EAAA,EAAD,CAAQC,QAASC,KAAK7B,MAAtB,eACA,kBAAC,IAAD,CAAY0B,UAAU,SAASI,IAAKD,KAAKhC,OAAQkC,WAAW,MAAMC,YAAa,EAAGC,WAAY,EAAGC,eAAe,EAC5G/B,OAAQ0B,KAAK3B,MAAMC,OAAQC,YAAayB,KAAK3B,MAAME,YAAaC,aAAcwB,KAAK3B,MAAMG,aACzF8B,UAAU,S,GAxCZC,IAAMC,W,MCCxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7B,SAAS8B,eAAe,W","file":"static/js/main.7c6fdf95.chunk.js","sourcesContent":["import React, { createRef } from 'react';\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { imgSrc: \"\", canvasWidth: \"400px\", canvasHeight: \"400px\" };\r\n        this.canvas = createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let img = new Image();\r\n        img.src = new URL(document.location.href).searchParams.get('image');\r\n        img.onload = () => {\r\n            let width = window.innerWidth * .6;\r\n            let height = (img.height / img.width) * width;\r\n            this.setState({ imgSrc: img.src, canvasWidth: `${width}px`, canvasHeight: `${height}px` });\r\n            console.log(\"Image loaded.\", width, height);\r\n            setTimeout(() => this.canvas.current.drawImage(), 200);\r\n        };\r\n    }\r\n\r\n    undo = () => {\r\n        this.canvas.current.undo();\r\n    }\r\n\r\n    clear = () => {\r\n        this.canvas.current.clear();\r\n    }\r\n\r\n    save = () => {\r\n        alert(\"Prenez une capture d'Ã©cran !\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Button onClick={this.undo}>Annuler</Button>\r\n                <Button onClick={this.clear}>Effacer</Button>\r\n                <Button onClick={this.save}>Sauvegarder</Button>\r\n                <CanvasDraw className=\"canvas\" ref={this.canvas} brushColor=\"red\" brushRadius={2} lazyRadius={0} hideInterface={false}\r\n                    imgSrc={this.state.imgSrc} canvasWidth={this.state.canvasWidth} canvasHeight={this.state.canvasHeight}\r\n                    hideGrid={true} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}